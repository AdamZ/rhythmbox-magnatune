;; -*- scheme -*-
; object definitions ...

(define-object Plugin
  (in-module "RB")
  (parent "GObject")
  (c-name "RBPlugin")
  (gtype-id "RB_TYPE_PLUGIN")
)

(define-object Shell
  (in-module "RB")
  (parent "GObject")
  (c-name "RBShell")
  (gtype-id "RB_TYPE_SHELL")
)

(define-object ShellPlayer
  (in-module "RB")
  (parent "GObject")
  (c-name "RBShellPlayer")
  (gtype-id "RB_TYPE_SHELL_PLAYER")
)

(define-object Source
  (in-module "RB")
  (parent "GtkHBox")
  (c-name "RBSource")
  (gtype-id "RB_TYPE_SOURCE")
)

(define-object BrowserSource
  (in-module "RB")
  (parent "RBSource")
  (c-name "RBBrowserSource")
  (gtype-id "RB_TYPE_BROWSER_SOURCE")
)

(define-object RemovableMediaSource
  (in-module "RB")
  (parent "RBBrowserSource")
  (c-name "RBRemovableMediaSource")
  (gtype-id "RB_TYPE_REMOVABLE_MEDIA_SOURCE")
)

(define-object RemovableMediaManager
  (in-module "RB")
  (parent "GObject")
  (c-name "RBRemovableMediaManager")
  (gtype-id "RB_TYPE_REMOVABLE_MEDIA_MANAGER")
)

(define-object SourceList
  (in-module "RB")
  (parent "GtkScrolledWindow")
  (c-name "RBSourceList")
  (gtype-id "RB_TYPE_SOURCELIST")
)

(define-object EntryView
  (in-module "RB")
  (parent "GtkScrolledWindow")
  (c-name "RBEntryView")
  (gtype-id "RB_TYPE_ENTRY_VIEW")
)

(define-object PropertyView
  (in-module "RB")
  (parent "GtkScrolledWindow")
  (c-name "RBPropertyView")
  (gtype-id "RB_TYPE_PROPERTY_VIEW")
)

(define-object LibraryBrowser
  (in-module "RB")
  (parent "GtkHBox")
  (c-name "RBLibraryBrowser")
  (gtype-id "RB_TYPE_LIBRARY_BROWSER")
)

(define-object SongInfo
  (in-module "RB")
  (parent "GtkDialog")
  (c-name "RBSongInfo")
  (gtype-id "RB_TYPE_SONG_INFO")
)

;; Enumerations and flags ...

(define-enum ShellPlayerError
  (in-module "RB")
  (c-name "RBShellPlayerError")
  (gtype-id "RB_TYPE_SHELL_PLAYER_ERROR")
  (values
    '("playlist-parse-error" "RB_SHELL_PLAYER_ERROR_PLAYLIST_PARSE_ERROR")
    '("end-of-playlist" "RB_SHELL_PLAYER_ERROR_END_OF_PLAYLIST")
    '("not-playing" "RB_SHELL_PLAYER_ERROR_NOT_PLAYING")
    '("not-seekable" "RB_SHELL_PLAYER_ERROR_NOT_SEEKABLE")
  )
)

(define-enum SourceEOFType
  (in-module "RB")
  (c-name "RBSourceEOFType")
  (gtype-id "RB_TYPE_SOURCE_EOF_TYPE")
  (values
    '("error" "RB_SOURCE_EOF_ERROR")
    '("stop" "RB_SOURCE_EOF_STOP")
    '("retry" "RB_SOURCE_EOF_RETRY")
    '("next" "RB_SOURCE_EOF_NEXT")
  )
)

(define-enum SourceListGroup
  (in-module "RB")
  (c-name "RBSourceListGroup")
  (gtype-id "RB_TYPE_SOURCELIST_GROUP")
  (values
    '("fixed" "RB_SOURCELIST_GROUP_FIXED")
    '("persistant" "RB_SOURCELIST_GROUP_PERSISTANT")
    '("removable" "RB_SOURCELIST_GROUP_REMOVABLE")
    '("transient" "RB_SOURCELIST_GROUP_TRANSIENT")
  )
)

(define-enum EntryViewColumn
  (in-module "RB")
  (c-name "RBEntryViewColumn")
  (gtype-id "RB_TYPE_ENTRY_VIEW_COLUMN")
  (values
    '("track-number" "RB_ENTRY_VIEW_COL_TRACK_NUMBER")
    '("title" "RB_ENTRY_VIEW_COL_TITLE")
    '("artist" "RB_ENTRY_VIEW_COL_ARTIST")
    '("album" "RB_ENTRY_VIEW_COL_ALBUM")
    '("genre" "RB_ENTRY_VIEW_COL_GENRE")
    '("duration" "RB_ENTRY_VIEW_COL_DURATION")
    '("quality" "RB_ENTRY_VIEW_COL_QUALITY")
    '("rating" "RB_ENTRY_VIEW_COL_RATING")
    '("play-count" "RB_ENTRY_VIEW_COL_PLAY_COUNT")
    '("year" "RB_ENTRY_VIEW_COL_YEAR")
    '("last-played" "RB_ENTRY_VIEW_COL_LAST_PLAYED")
    '("first-seen" "RB_ENTRY_VIEW_COL_FIRST_SEEN")
    '("last-seen" "RB_ENTRY_VIEW_COL_LAST_SEEN")
    '("location" "RB_ENTRY_VIEW_COL_LOCATION")
    '("error" "RB_ENTRY_VIEW_COL_ERROR")
  )
)

(define-enum EntryViewState
  (in-module "RB")
  (c-name "RBEntryViewState")
  (gtype-id "RB_TYPE_ENTRY_VIEW_STATE")
  (values
    '("not-playing" "RB_ENTRY_VIEW_NOT_PLAYING")
    '("playing" "RB_ENTRY_VIEW_PLAYING")
    '("paused" "RB_ENTRY_VIEW_PAUSED")
  )
)

(define-enum ShellUILocation
  (in-module "RB")
  (c-name "RBShellUILocation")
  (gtype-id "RB_TYPE_SHELL_UI_LOCATION")
  (values
    '("sidebar" "RB_SHELL_UI_LOCATION_SIDEBAR")
    '("main-top" "RB_SHELL_UI_LOCATION_MAIN_TOP")
    '("main-bottom" "RB_SHELL_UI_LOCATION_MAIN_BOTTOM")
  )
)

;; From ../../plugins/rb-plugin.h

(define-function rb_plugin_get_type
  (c-name "rb_plugin_get_type")
  (return-type "GType")
)

(define-method activate
  (of-object "RBPlugin")
  (c-name "rb_plugin_activate")
  (return-type "none")
  (parameters
    '("RBShell*" "shell")
  )
)

(define-method deactivate
  (of-object "RBPlugin")
  (c-name "rb_plugin_deactivate")
  (return-type "none")
  (parameters
    '("RBShell*" "shell")
  )
)

(define-method is_configurable
  (of-object "RBPlugin")
  (c-name "rb_plugin_is_configurable")
  (return-type "gboolean")
)

(define-method create_configure_dialog
  (of-object "RBPlugin")
  (c-name "rb_plugin_create_configure_dialog")
  (return-type "GtkWidget*")
)

(define-method find_file
  (of-object "RBPlugin")
  (c-name "rb_plugin_find_file")
  (return-type "char*")
  (parameters
    '("const-char*" "file")
  )
)



;; From ../../shell/rb-shell.h

(define-function rb_shell_error_quark
  (c-name "rb_shell_error_quark")
  (return-type "GQuark")
)

(define-function rb_shell_get_type
  (c-name "rb_shell_get_type")
  (return-type "GType")
)

(define-method present
  (of-object "RBShell")
  (c-name "rb_shell_present")
  (return-type "gboolean")
  (parameters
    '("guint32" "timestamp")
    '("GError**" "error")
  )
)

(define-method guess_source_for_uri
  (of-object "RBShell")
  (c-name "rb_shell_guess_source_for_uri")
  (return-type "RBSource*")
  (parameters
    '("const-char*" "uri")
  )
)

(define-method add_uri
  (of-object "RBShell")
  (c-name "rb_shell_add_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("const-char*" "title")
    '("const-char*" "genre")
    '("GError**" "error")
  )
)

(define-method load_uri
  (of-object "RBShell")
  (c-name "rb_shell_load_uri")
  (return-type "gboolean")
  (parameters
    '("const-char*" "uri")
    '("gboolean" "play")
    '("GError**" "error")
  )
)

(define-method get_player
  (of-object "RBShell")
  (c-name "rb_shell_get_player")
  (return-type "GObject*")
)

(define-method get_playlist_manager
  (of-object "RBShell")
  (c-name "rb_shell_get_playlist_manager")
  (return-type "GObject*")
)
(define-method get_ui_manager
  (of-object "RBShell")
  (c-name "rb_shell_get_ui_manager")
  (return-type "GObject*")
)

(define-method toggle_visibility
  (of-object "RBShell")
  (c-name "rb_shell_toggle_visibility")
  (return-type "none")
)

(define-method add_to_queue
  (of-object "RBShell")
  (c-name "rb_shell_add_to_queue")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-method remove_from_queue
  (of-object "RBShell")
  (c-name "rb_shell_remove_from_queue")
  (return-type "gboolean")
  (parameters
    '("const-gchar*" "uri")
    '("GError**" "error")
  )
)

(define-method hidden_notify
  (of-object "RBShell")
  (c-name "rb_shell_hidden_notify")
  (return-type "none")
  (parameters
    '("guint" "timeout")
    '("const-char*" "primary")
    '("GtkWidget*" "icon")
    '("const-char*" "secondary")
    '("gboolean" "requested")
  )
)

(define-method notify_playing_entry
  (of-object "RBShell")
  (c-name "rb_shell_notify_playing_entry")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("gboolean" "requested")
  )
)

(define-method register_entry_type_for_source
  (of-object "RBShell")
  (c-name "rb_shell_register_entry_type_for_source")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
    '("RhythmDBEntryType_*" "type")
  )
)

(define-method get_party_mode
  (of-object "RBShell")
  (c-name "rb_shell_get_party_mode")
  (return-type "gboolean")
)

(define-method append_source
  (of-object "RBShell")
  (c-name "rb_shell_append_source")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
    '("RBSource*" "parent" (null-ok) (default "NULL"))
  )
)

;; From ../../shell/rb-shell-player.h

(define-function rb_shell_player_error_quark
  (c-name "rb_shell_player_error_quark")
  (return-type "GQuark")
)

(define-function rb_shell_player_get_type
  (c-name "rb_shell_player_get_type")
  (return-type "GType")
)

(define-method set_selected_source
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_selected_source")
  (return-type "none")
  (parameters
    '("RBSource*" "player")
  )
)

(define-method set_playing_source
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_playing_source")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
  )
)

(define-method get_playing_source
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing_source")
  (return-type "RBSource*")
)

(define-method jump_to_current
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_jump_to_current")
  (return-type "none")
)

(define-method play_entry
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_play_entry")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("RBSource*" "source" (default "NULL"))
  )
)

(define-method playpause
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_playpause")
  (return-type "gboolean")
  (parameters
    '("gboolean" "unused" (default "FALSE"))
    '("GError**" "error")
  )
)

(define-method play
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_play")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method pause
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_pause")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method stop
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_stop")
  (return-type "none")
)

(define-method do_previous
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_do_previous")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method do_next
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_do_next")
  (return-type "gboolean")
  (parameters
    '("GError**" "error")
  )
)

(define-method get_playing_time_string
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing_time_string")
  (return-type "char*")
)

(define-method get_playing_time
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing_time")
  (return-type "gboolean")
  (parameters
    '("guint*" "time")
    '("GError**" "error")
  )
)

(define-method set_playing_time
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_playing_time")
  (return-type "gboolean")
  (parameters
    '("guint" "time")
    '("GError**" "error")
  )
)

(define-method seek
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_seek")
  (return-type "none")
  (parameters
    '("long" "offset")
  )
)

(define-method get_playing_song_duration
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing_song_duration")
  (return-type "long")
)

(define-method get_playing
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "playing")
    '("GError**" "error")
  )
)

(define-method get_playing_path
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing_path")
  (return-type "gboolean")
  (parameters
    '("const-gchar**" "path")
    '("GError**" "error")
  )
)

(define-method set_playback_state
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_playback_state")
  (return-type "none")
  (parameters
    '("gboolean" "shuffle")
    '("gboolean" "repeat")
  )
)

(define-method get_playback_state
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playback_state")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "shuffle")
    '("gboolean*" "repeat")
  )
)

(define-method get_playing_entry
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_playing_entry")
  (return-type "RhythmDBEntry*")
)

(define-method toggle_mute
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_toggle_mute")
  (return-type "none")
)

(define-method set_volume
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_volume")
  (return-type "gboolean")
  (parameters
    '("gdouble" "volume")
    '("GError**" "error")
  )
)

(define-method get_volume
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_volume")
  (return-type "gboolean")
  (parameters
    '("gdouble*" "volume")
    '("GError**" "error")
  )
)

(define-method set_volume_relative
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_volume_relative")
  (return-type "gboolean")
  (parameters
    '("gdouble" "volume")
    '("GError**" "error")
  )
)

(define-method set_mute
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_set_mute")
  (return-type "gboolean")
  (parameters
    '("gboolean" "mute")
    '("GError**" "error")
  )
)

(define-method get_mute
  (of-object "RBShellPlayer")
  (c-name "rb_shell_player_get_mute")
  (return-type "gboolean")
  (parameters
    '("gboolean*" "mute")
    '("GError**" "error")
  )
)

;; From ../../sources/rb-source.h

(define-function rb_source_get_type
  (c-name "rb_source_get_type")
  (return-type "GType")
)

; this is fake
(define-function rb_source_new
  (is-constructor-of "RBSource")
  (c-name "rb_browser_new")
  (return-type "RBSource*")
  (properties
    '("name" (argname "name") (optional))
    '("icon" (argname "icon") (optional))
    '("query-model" (argname "query-model") (optional))
    '("sourcelist-group" (argname "sourcelist-group") (optional))
  )
)

(define-method notify_filter_changed
  (of-object "RBSource")
  (c-name "rb_source_notify_filter_changed")
  (return-type "none")
)

(define-method notify_status_changed
  (of-object "RBSource")
  (c-name "rb_source_notify_status_changed")
  (return-type "none")
)

(define-method update_play_statistics
  (of-object "RBSource")
  (c-name "rb_source_update_play_statistics")
  (return-type "none")
  (parameters
    '("RhythmDB*" "db")
    '("RhythmDBEntry*" "entry")
  )
)

(define-method set_pixbuf
  (of-object "RBSource")
  (c-name "rb_source_set_pixbuf")
  (return-type "none")
  (parameters
    '("GdkPixbuf*" "pixbuf")
  )
)

(define-method get_status
  (of-object "RBSource")
  (c-name "rb_source_get_status")
  (return-type "none")
  (parameters
    '("char **" "text")
    '("char **" "progress_text")
    '("float *" "progress")
  )
)

(define-method can_browse
  (of-object "RBSource")
  (c-name "rb_source_can_browse")
  (return-type "gboolean")
)

(define-method get_browser_key
  (of-object "RBSource")
  (c-name "rb_source_get_browser_key")
  (return-type "char*")
)

(define-method browser_toggled
  (of-object "RBSource")
  (c-name "rb_source_browser_toggled")
  (return-type "none")
  (parameters
    '("gboolean" "enabled")
  )
)

(define-method get_entry_view
  (of-object "RBSource")
  (c-name "rb_source_get_entry_view")
  (return-type "RBEntryView*")
)

(define-method get_property_views
  (of-object "RBSource")
  (c-name "rb_source_get_property_views")
  (return-type "GList*")
)

(define-method can_rename
  (of-object "RBSource")
  (c-name "rb_source_can_rename")
  (return-type "gboolean")
)

(define-method can_search
  (of-object "RBSource")
  (c-name "rb_source_can_search")
  (return-type "gboolean")
)

(define-method search
  (of-object "RBSource")
  (c-name "rb_source_search")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-method reset_filters
  (of-object "RBSource")
  (c-name "rb_source_reset_filters")
  (return-type "none")
)

(define-method can_cut
  (of-object "RBSource")
  (c-name "rb_source_can_cut")
  (return-type "gboolean")
)

(define-method can_delete
  (of-object "RBSource")
  (c-name "rb_source_can_delete")
  (return-type "gboolean")
)

(define-method can_move_to_trash
  (of-object "RBSource")
  (c-name "rb_source_can_move_to_trash")
  (return-type "gboolean")
)

(define-method can_copy
  (of-object "RBSource")
  (c-name "rb_source_can_copy")
  (return-type "gboolean")
)

(define-method can_paste
  (of-object "RBSource")
  (c-name "rb_source_can_paste")
  (return-type "gboolean")
)

(define-method can_add_to_queue
  (of-object "RBSource")
  (c-name "rb_source_can_add_to_queue")
  (return-type "gboolean")
)

(define-method cut
  (of-object "RBSource")
  (c-name "rb_source_cut")
  (return-type "GList*")
)

(define-method copy
  (of-object "RBSource")
  (c-name "rb_source_copy")
  (return-type "GList*")
)

(define-method paste
  (of-object "RBSource")
  (c-name "rb_source_paste")
  (return-type "none")
  (parameters
    '("GList*" "entries")
  )
)

(define-method delete
  (of-object "RBSource")
  (c-name "rb_source_delete")
  (return-type "none")
)

(define-method add_to_queue
  (of-object "RBSource")
  (c-name "rb_source_add_to_queue")
  (return-type "none")
  (parameters
    '("RBSource*" "queue")
  )
)

(define-method move_to_trash
  (of-object "RBSource")
  (c-name "rb_source_move_to_trash")
  (return-type "none")
)

(define-method song_properties
  (of-object "RBSource")
  (c-name "rb_source_song_properties")
  (return-type "none")
)

(define-method try_playlist
  (of-object "RBSource")
  (c-name "rb_source_try_playlist")
  (return-type "gboolean")
)

(define-method can_pause
  (of-object "RBSource")
  (c-name "rb_source_can_pause")
  (return-type "gboolean")
)

(define-method handle_eos
  (of-object "RBSource")
  (c-name "rb_source_handle_eos")
  (return-type "RBSourceEOFType")
)

(define-method receive_drag
  (of-object "RBSource")
  (c-name "rb_source_receive_drag")
  (return-type "gboolean")
  (parameters
    '("GtkSelectionData*" "data")
  )
)

(define-method show_popup
  (of-object "RBSource")
  (c-name "rb_source_show_popup")
  (return-type "gboolean")
)

(define-method delete_thyself
  (of-object "RBSource")
  (c-name "rb_source_delete_thyself")
  (return-type "none")
)

(define-method activate
  (of-object "RBSource")
  (c-name "rb_source_activate")
  (return-type "none")
)

(define-method deactivate
  (of-object "RBSource")
  (c-name "rb_source_deactivate")
  (return-type "none")
)

(define-method get_ui_actions
  (of-object "RBSource")
  (c-name "rb_source_get_ui_actions")
  (return-type "GList*")
)

(define-method get_search_actions
  (of-object "RBSource")
  (c-name "rb_source_get_search_actions")
  (return-type "GList*")
)

(define-method gather_selected_properties
  (of-object "RBSource")
  (c-name "rb_source_gather_selected_properties")
  (return-type "GList*")
  (parameters
    '("RhythmDBPropType" "prop")
  )
)

(define-method show_source_popup
  (of-object "RBSource")
  (c-name "_rb_source_show_popup")
  (return-type "none")
  (parameters
    '("const-char*" "ui_path")
  )
)


(define-virtual impl_get_status
  (of-object "RBSource")
  (return-type "none")
  (parameters
    '("char **" "text")
    '("char **" "progress_text")
    '("float *" "progress")
  )
)

(define-virtual impl_can_browse
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_get_browser_key
  (of-object "RBSource")
  (return-type "char*")
)

(define-virtual impl_browser_toggled
  (of-object "RBSource")
  (return-type "none")
  (parameters
    '("gboolean" "visible")
  )
)

(define-virtual impl_get_entry_view
  (of-object "RBSource")
  (return-type "RBEntryView*")
)

(define-virtual impl_get_property_views
  (of-object "RBSource")
  (return-type "GList*")
)

(define-virtual impl_can_rename
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_search
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_search
  (of-object "RBSource")
  (return-type "none")
  (parameters
    '("const-char*" "text")
  )
)

(define-virtual impl_reset_filters
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_can_cut
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_copy
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_paste
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_delete
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_move_to_trash
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_add_to_queue
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_cut
  (of-object "RBSource")
  (return-type "GList*")
)

(define-virtual impl_copy
  (of-object "RBSource")
  (return-type "GList*")
)

(define-virtual impl_paste
  (of-object "RBSource")
  (return-type "none")
  (parameters
    '("GList*" "entries")
  )
)

(define-virtual impl_delete
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_move_to_trash
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_add_to_queue
  (of-object "RBSource")
  (return-type "none")
  (parameters
    '("RBSource*" "queue_source")
  )
)

(define-virtual impl_song_properties
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_try_playlist
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_can_pause
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_handle_eos
  (of-object "RBSource")
  (return-type "RBSourceEOFType")
)

(define-virtual impl_receive_drag
  (of-object "RBSource")
  (return-type "gboolean")
  (parameters
    '("GtkSelectionData*" "selection")
  )
)

(define-virtual impl_show_popup
  (of-object "RBSource")
  (return-type "gboolean")
)

(define-virtual impl_delete_thyself
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_activate
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_deactivate
  (of-object "RBSource")
  (return-type "none")
)

(define-virtual impl_get_ui_actions
  (of-object "RBSource")
  (return-type "GList*")
)

(define-virtual impl_get_search_actions
  (of-object "RBSource")
  (return-type "GList*")
)


;; From ../../sources/rb-sourcelist.h

(define-function rb_sourcelist_get_type
  (c-name "rb_sourcelist_get_type")
  (return-type "GType")
)

(define-function sourcelist_new
  (in-module "rb")
  (c-name "rb_sourcelist_new")
  (is-constructor-of "RBSourcelist")
  (return-type "GtkWidget*")
  (parameters
    '("RBShell*" "shell")
  )
)

(define-method append
  (of-object "RBSourceList")
  (c-name "rb_sourcelist_append")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
    '("RBSource*" "parent")
  )
)

(define-method add_widget
  (of-object "RBShell")
  (c-name "rb_shell_add_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("RBShellUILocation" "location")
  )
)

(define-method remove_widget
  (of-object "RBShell")
  (c-name "rb_shell_remove_widget")
  (return-type "none")
  (parameters
    '("GtkWidget*" "widget")
    '("RBShellUILocation" "location")
  )
)

(define-method set_playing_source
  (of-object "RBSourceList")
  (c-name "rb_sourcelist_set_playing_source")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
  )
)

(define-method edit_source_name
  (of-object "RBSourceList")
  (c-name "rb_sourcelist_edit_source_name")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
  )
)

(define-method remove
  (of-object "RBSourceList")
  (c-name "rb_sourcelist_remove")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
  )
)

(define-method select
  (of-object "RBSourceList")
  (c-name "rb_sourcelist_select")
  (return-type "none")
  (parameters
    '("RBSource*" "source")
  )
)


;; From ../../widgets/rb-entry-view.h

(define-function rb_entry_view_get_type
  (c-name "rb_entry_view_get_type")
  (return-type "GType")
)

(define-function entry_view_new
  (in-module "rb")
  (c-name "rb_entry_view_new")
  (is-constructor-of "RBEntryView")
  (return-type "RBEntryView*")
  (parameters
    '("RhythmDB*" "db")
    '("GObject*" "shell_player")
    '("const-char*" "sort_key")
    '("gboolean" "drag_source")
    '("gboolean" "drag_dest")
  )
)

(define-method append_column
  (of-object "RBEntryView")
  (c-name "rb_entry_view_append_column")
  (return-type "none")
  (parameters
    '("RBEntryViewColumn" "coltype")
    '("gboolean" "always_visible")
  )
)

(define-method append_column_custom
  (of-object "RBEntryView")
  (c-name "rb_entry_view_append_column_custom")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
    '("const-char*" "title")
    '("const-char*" "key")
    '("GCompareDataFunc" "sort_func")
    '("RhythmDBPropType" "sort_propid")
  )
)

(define-method set_columns_clickable
  (of-object "RBEntryView")
  (c-name "rb_entry_view_set_columns_clickable")
  (return-type "none")
  (parameters
    '("gboolean" "clickable")
  )
)

(define-method set_model
  (of-object "RBEntryView")
  (c-name "rb_entry_view_set_model")
  (return-type "none")
  (parameters
    '("RhythmDBQueryModel*" "model")
  )
)

(define-method set_state
  (of-object "RBEntryView")
  (c-name "rb_entry_view_set_state")
  (return-type "none")
  (parameters
    '("RBEntryViewState" "state")
  )
)

(define-method have_selection
  (of-object "RBEntryView")
  (c-name "rb_entry_view_have_selection")
  (return-type "gboolean")
)

(define-method have_complete_selection
  (of-object "RBEntryView")
  (c-name "rb_entry_view_have_complete_selection")
  (return-type "gboolean")
)

(define-method get_selected_entries
  (of-object "RBEntryView")
  (c-name "rb_entry_view_get_selected_entries")
  (return-type "GList*")
)

(define-method select_all
  (of-object "RBEntryView")
  (c-name "rb_entry_view_select_all")
  (return-type "none")
)

(define-method select_none
  (of-object "RBEntryView")
  (c-name "rb_entry_view_select_none")
  (return-type "none")
)

(define-method select_entry
  (of-object "RBEntryView")
  (c-name "rb_entry_view_select_entry")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
  )
)

(define-method get_entry_contained
  (of-object "RBEntryView")
  (c-name "rb_entry_view_get_entry_contained")
  (return-type "gboolean")
  (parameters
    '("RhythmDBEntry*" "entry")
  )
)

(define-method get_entry_visible
  (of-object "RBEntryView")
  (c-name "rb_entry_view_get_entry_visible")
  (return-type "gboolean")
  (parameters
    '("RhythmDBEntry*" "entry")
  )
)

(define-method scroll_to_entry
  (of-object "RBEntryView")
  (c-name "rb_entry_view_scroll_to_entry")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
  )
)

(define-method enable_drag_source
  (of-object "RBEntryView")
  (c-name "rb_entry_view_enable_drag_source")
  (return-type "none")
  (parameters
    '("const-GtkTargetEntry*" "targets")
    '("int" "n_targets")
  )
)

(define-method get_sorting_order
  (of-object "RBEntryView")
  (c-name "rb_entry_view_get_sorting_order")
  (return-type "none")
  (parameters
    '("const-char**" "column_name")
    '("gint*" "sort_order")
  )
)

(define-method set_sorting_order
  (of-object "RBEntryView")
  (c-name "rb_entry_view_set_sorting_order")
  (return-type "none")
  (parameters
    '("const-char*" "column_name")
    '("gint" "sort_order")
  )
)

(define-method get_sorting_type
  (of-object "RBEntryView")
  (c-name "rb_entry_view_get_sorting_type")
  (return-type "const-char*")
)

(define-method set_sorting_type
  (of-object "RBEntryView")
  (c-name "rb_entry_view_set_sorting_type")
  (return-type "none")
  (parameters
    '("const-char*" "sorttype")
  )
)

(define-method set_fixed_column_width
  (of-object "RBEntryView")
  (c-name "rb_entry_view_set_fixed_column_width")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
    '("GtkCellRenderer*" "renderer")
    '("const-gchar**" "strings")
  )
)

(define-function rb_entry_view_get_time_date_column_sample
  (c-name "rb_entry_view_get_time_date_column_sample")
  (return-type "const-char*")
)

(define-method resort_model
  (of-object "RBEntryView")
  (c-name "rb_entry_view_resort_model")
  (return-type "none")
)

;; From ../../widgets/rb-property-view.h

(define-function rb_property_view_get_type
  (c-name "rb_property_view_get_type")
  (return-type "GType")
)

(define-function property_view_new
  (in-module "rb")
  (c-name "rb_property_view_new")
  (is-constructor-of "RBPropertyView")
  (return-type "RBPropertyView*")
  (parameters
    '("RhythmDB*" "db")
    '("guint" "propid")
    '("const-char*" "title")
  )
)

(define-method append_column_custom
  (of-object "RBPropertyView")
  (c-name "rb_property_view_append_column_custom")
  (return-type "none")
  (parameters
    '("GtkTreeViewColumn*" "column")
  )
)

(define-method set_selection_mode
  (of-object "RBPropertyView")
  (c-name "rb_property_view_set_selection_mode")
  (return-type "none")
  (parameters
    '("GtkSelectionMode" "mode")
  )
)

(define-method reset
  (of-object "RBPropertyView")
  (c-name "rb_property_view_reset")
  (return-type "none")
)

(define-method set_selection
  (of-object "RBPropertyView")
  (c-name "rb_property_view_set_selection")
  (return-type "none")
  (parameters
    '("const-GList*" "names")
  )
)

(define-method get_model
  (of-object "RBPropertyView")
  (c-name "rb_property_view_get_model")
  (return-type "RhythmDBPropertyModel*")
)

(define-method set_model
  (of-object "RBPropertyView")
  (c-name "rb_property_view_set_model")
  (return-type "none")
  (parameters
    '("RhythmDBPropertyModel*" "model")
  )
)

(define-method get_num_properties
  (of-object "RBPropertyView")
  (c-name "rb_property_view_get_num_properties")
  (return-type "guint")
)

(define-method set_search_func
  (of-object "RBPropertyView")
  (c-name "rb_property_view_set_search_func")
  (return-type "none")
  (parameters
    '("GtkTreeViewSearchEqualFunc" "func")
    '("gpointer" "func_data")
    '("GtkDestroyNotify" "notify")
  )
)

;; From ../../widgets/rb-library-browser.h

(define-function rb_library_browser_get_type
  (c-name "rb_library_browser_get_type")
  (return-type "GType")
)

(define-function library_browser_new
  (in-module "rb")
  (c-name "rb_library_browser_new")
  (is-constructor-of "RBLibraryBrowser")
  (return-type "RBLibraryBrowser*")
  (parameters
    '("RhythmDB*" "db")
    '("RhythmDBEntryType_*" "entry_type")
  )
)

(define-method set_model
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_set_model")
  (return-type "none")
  (parameters
    '("RhythmDBQueryModel*" "model")
    '("gboolean" "query_pending")
  )
)

(define-method reset
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_reset")
  (return-type "gboolean")
)

(define-method construct_query
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_construct_query")
  (return-type "RhythmDBQuery*")
)

(define-method get_property_views
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_get_property_views")
  (return-type "GList*")
)

(define-method get_property_view
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_get_property_view")
  (return-type "RBPropertyView*")
  (parameters
    '("RhythmDBPropType" "type")
  )
)

(define-method has_selection
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_has_selection")
  (return-type "gboolean")
)

(define-method set_selection
  (of-object "RBLibraryBrowser")
  (c-name "rb_library_browser_set_selection")
  (return-type "none")
  (parameters
    '("RhythmDBPropType" "type")
    '("GList*" "list")
  )
)


;; From ../../sources/rb-browser-source.h

(define-function rb_browser_source_get_type
  (c-name "rb_browser_source_get_type")
  (return-type "GType")
)

; this is fake
(define-function rb_browser_source_new
  (is-constructor-of "RBBrowserSource")
  (c-name "rb_browser_source_new")
  (return-type "RBBrowserSource*")
  (properties
    '("entry-type" (argname "entry-type") (optional))
    '("sorting-key" (argname "sorting-key") (optional))

    ; from RBSource
    '("name" (argname "name") (optional))
    '("icon" (argname "icon") (optional))
    '("query-model" (argname "query-model") (optional))
    '("sourcelist-group" (argname "sourcelist-group") (optional))
  )
)

(define-method get_paned_key
  (of-object "RBBrowserSource")
  (c-name "rb_browser_source_get_paned_key")
  (return-type "char*")
)

(define-method has_drop_support
  (of-object "RBBrowserSource")
  (c-name "rb_browser_source_has_drop_support")
  (return-type "gboolean")
)

(define-virtual impl_get_paned_key
  (of-object "RBBrowserSource")
  (return-type "char*")
)

(define-virtual impl_has_drop_support
  (of-object "RBBrowserSource")
  (return-type "gboolean")
)

(define-virtual impl_show_entry_popup
  (of-object "RBBrowserSource")
  (return-type "none")
)

(define-virtual impl_pack_paned
  (of-object "RBBrowserSource")
  (return-type "none")
  (parameters
    '("GtkWidget*" "paned")
  )
)


;; From ../../sources/rb-removable-media-source.h

(define-function rb_removable_media_source_get_type
  (c-name "rb_removable_media_source_get_type")
  (return-type "GType")
)

(define-method build_dest_uri
  (of-object "RBRemovableMediaSource")
  (c-name "rb_removable_media_source_build_dest_uri")
  (return-type "char*")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("const-char*" "mimetype")
    '("const-char*" "extension")
  )
)

(define-method track_added
  (of-object "RBRemovableMediaSource")
  (c-name "rb_removable_media_source_track_added")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("const-char*" "uri")
    '("const-char*" "mimetype")
  )
)

(define-method get_mime_types
  (of-object "RBRemovableMediaSource")
  (c-name "rb_removable_media_source_get_mime_types")
  (return-type "GList*")
)

(define-virtual impl_build_dest_uri
  (of-object "RBRemovableMediaSource")
  (return-type "char*")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("const-char*" "mimetype")
    '("const-char*" "extension")
  )
)

(define-virtual impl_track_added
  (of-object "RBRemovableMediaSource")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("const-char*" "uri")
    '("const-char*" "mimetype")
  )
)

(define-virtual impl_get_mime_types
  (of-object "RBRemovableMediaSource")
  (return-type "GList*")
)



;; From ../../shell/rb-removable-media-manager.h

(define-function rb_removable_media_manager_get_type
  (c-name "rb_removable_media_manager_get_type")
  (return-type "GType")
)

(define-method scan
  (of-object "RBRemovableMediaManager")
  (c-name "rb_removable_media_manager_scan")
  (return-type "none")
)

(define-method queue_transfer
  (of-object "RBRemovableMediaManager")
  (c-name "rb_removable_media_manager_queue_transfer")
  (return-type "none")
  (parameters
    '("RhythmDBEntry*" "entry")
    '("const-char*" "dest")
    '("GList*" "mime_type")
    '("RBTranferCompleteCallback" "callback")
    '("gpointer" "userdata")
  )
)


;; From ../../widgets/rb-song-info.h

(define-function rb_song_info_get_type
  (c-name "rb_song_info_get_type")
  (return-type "GType")
)

(define-function rb_song_info_new
  (c-name "rb_song_info_new")
  (is-constructor-of "RBSongInfo")
  (return-type "GtkWidget*")
  (parameters
    '("RBSource*" "source")
    '("RBEntryView*" "entry_view")
  )
)

(define-method append_page
  (of-object "RBSongInfo")
  (c-name "rb_song_info_append_page")
  (return-type "guint")
  (parameters
    '("const-char*" "title")
    '("GtkWidget*" "page")
  )
)


;; extra stuff

(define-function _debug
  (in-module "rb")
  (c-name "rb_debug_real")
  (return-type "none")
  (parameters
    '("const-char*" "function")
    '("const-char*" "file")
    '("int" "line")
    '("gboolean" "newline")
    '("const-char*" "str")
  )
)

(define-function error_dialog
  (in-module "rb")
  (c-name "rb_error_dialog")
  (return-type "none")
  (parameters
    '("GtkWindow*" "window" (default "NULL"))
    '("const-char*" "title")
    '("const-char*" "message")
  )
)

